@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@1,300&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;1,300&display=swap');
/* font-family: 'Montserrat', sans-serif; */
body {
padding: 0px;
margin: 0px;
background-image: url("images/background.jpg");

}

.top {
    max-width: 100%;
    overflow: hidden;
    display:flex ;
    align-items: center;
    justify-content: space-between;
    /* From https://css.glass */
background: rgba(255, 255, 255, 0.2);
border-radius: 16px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(5px);
-webkit-backdrop-filter: blur(5px);
border: 1px solid rgba(255, 255, 255, 0.3);
}
.next{
    width: 50px;
    height: 50px;
   margin-right: 30px;
}
.timer {
    height: 100px;
    width: 100px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 5px;
    position: relative;
    text-align: center;
}

.timer p {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.container {
    width: 100px;
    height: 100px;

    position: relative;
    text-align: center;
    color: white;
  }
  
  .container img{

    width: 100%;
    height: 100%;
    animation: rotation 2s infinite linear;

  }
  
  /* .centered {
    color: black;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5rem;
  } */
  @keyframes rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
  }
.question {
    font-family: 'Montserrat', sans-serif;
    font-size: 2rem;
    text-align: center;
}

.options li {
    width: 40%;
    font-size: 1.5rem;
    padding: 30px;
    list-style-type: none;
    background-color: aqua;
    margin: 10px;
    display: inline-block;
    border-radius: 40px;
    
}
.options li:hover{
     background-color: grey;
     color: black;
}
/* .options ul {
margin: 0px;
background-color: blue;
} */


.centered::after {
  color: black;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 1.5rem;

  content: counter(count);
  animation: counter 5s linear infinite alternate;
  counter-reset: count 0;
}

@keyframes counter {
  0% {
    counter-increment: count 10;
  }
  10% {
    counter-increment: count 9;
  }
  20% {
    counter-increment: count 8;
  }
  30% {
    counter-increment: count 7;
  }
  40% {
    counter-increment: count 6;
  }
  50% {
    counter-increment: count 5;
  }
  60% {
    counter-increment: count 4;
  }
  70% {
    counter-increment: count 3;
  }
  80% {
    counter-increment: count 2;
  }
  90% {
    counter-increment: count 1;
  }
  100% {
    counter-increment: count 0;
  }
}